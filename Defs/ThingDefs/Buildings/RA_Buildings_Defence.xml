<?xml version="1.0" encoding="utf-8" ?>
<ThingDefs>

	<!--
	- fillPercent - determine cover multiplier vs projectiles
	- terrainAffordanceNeeded - type of terrain required to be build upon:
		- Light - light objects like firniture can be build on any light supporting surface (like sand)
		- Heavy - require solid surface below (for structures)
	- castEdgeShadows - shadow aura around building
	- staticSunShadowHeight - solid square shadow with set length
	- drawerType:
		- MapMeshOnly - static texture, doesn't draw from comps
		- MapMeshAndRealTime - ?
		- RealtimeOnly - used for objects that change their texture (unsure)
	- repairEffect:
		- Repair - default repair effect of smoke puffs
		- Welding - welding sparks and sound for repairing advanced metal buildings
	- damageData:
		- cornerX - draws corner cracks or other mentioned overlay on selected corner
		- edgeX - draws edge cracks or other mentioned overlay on selected edge
		- rect - manually redefines damage overlay area rectangle (defauls is based on building size)
		- rectX - individual damage rect, to define multiple damage areas for complex buildings and furniture
	- surfaceType:
		- Item - allows place items
		- Eat - allows place food to eat 
	-->

	<ThingDef Name="Defence" ParentName="Building" Abstract="True">
		<designationCategory>Defence</designationCategory>
	</ThingDef>

	<!--==================== Traps ========================-->

	<ThingDef ParentName="Defence">
		<defName>TrapDeadfall</defName>
		<label>deadfall trap</label>
		<description>A suspended spiked weight held up by a delicate trigger. When the victim disturbs the trigger, the weight is released and falls on the victim's head or torso.</description>
		<thingClass>Building_TrapRearmable</thingClass>
		<graphicData>
			<texPath>Things/Building/Security/DeadfallArmed</texPath>
		</graphicData>
		<statBases>
			<MaxHitPoints>40</MaxHitPoints>
			<WorkToMake>3000</WorkToMake>
			<Beauty>-4</Beauty>
			<TrapMeleeDamage>50</TrapMeleeDamage>
			<TrapSpringChance>0.9</TrapSpringChance>
		</statBases>
		<drawerType>RealtimeOnly</drawerType>
		<tickerType>Normal</tickerType>
		<costList>
			<TrapDeadfall>1</TrapDeadfall>
		</costList>
		<building>
			<isTrap>true</isTrap>
			<trapDamageCategory>Sharp</trapDamageCategory>
			<trapUnarmedGraphicData>
				<texPath>Things/Building/Security/DeadfallUnarmed</texPath>
				<graphicClass>Graphic_Single</graphicClass>
				<shaderType>Cutout</shaderType>
			</trapUnarmedGraphicData>
		</building>
		<!-- actual minified def is auto generated -->
		<minifiedDef>MinifiedDefences</minifiedDef>
		<researchPrerequisites><li>Blocked</li></researchPrerequisites>
	</ThingDef>

</ThingDefs>
